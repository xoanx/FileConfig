spring:
  application:
    name:
      apigateway
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      routes:
        - id: Employee2
          uri: http://localhost:8085
          predicates:
            - Path= /employee2/search-by-employee-id/**
            - Path= /employee2/search-by-employee-email/**
          filters:
            - name: RequestRateLimiter
              arg:
                redis-rate-limiter.requestedTokens: "${replenishRate}"
                redis-rate-limiter.replenishRate: "${burstCapacity}"
                redis-rate-limiter.burstCapacity: "${requestedTokens}"
        - id: Employee
          uri: http://localhost:8081
          predicates:
            - Path= /employee/**
          filters:
            - name: RequestRateLimiter
              arg:
                redis-rate-limiter.requestedTokens: "${replenishRate}"
                redis-rate-limiter.replenishRate: "${burstCapacity}"
                redis-rate-limiter.burstCapacity: "${requestedTokens}"
        - id: Employee
          uri: http://localhost:8081
          predicates:
            - Path= /employee/search-by-employee-email/**
            - RemoteAddr= 127.0.0.1/24
          filters:
            - name: RequestRateLimiter
              arg:
                redis-rate-limiter.requestedTokens: ${replenishRate}
                redis-rate-limiter.replenishRate: ${burstCapacity}
                redis-rate-limiter.burstCapacity: ${requestedTokens}

  main:
    web-application-type:
      reactive
server:
  port: 8080

logging:
  level:
    org:
      springframework:
        cloud:
          gateway: DEBUG
      example:
        apigateway:
          ConfigGateway: DEBUG

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

###RequestLimited
replenishRate: 10
burstCapacity: 20
requestedTokens: 3

###DockerRedis


###






