spring:
  application:
    name:
      gateway
#Filter Routing
    redis:
      host: localhost
      port: 6379
    cloud:
      gateway:
        routes:
          - id: employee2
            uri: lb://employee2
            predicates:
              - Path= /employee2/search-by-employee-id/012d0cb8-a364-429a-b45c-3b4f39ac5786
              - Path= /employee2/search-by-employee-email/
            filters:
              - name: RequestRateLimiter
                arg:
                  redis-rate-limiter.requestedTokens: ${requestedTokens}
                  redis-rate-limiter.replenishRate: ${replenishRate}
                  redis-rate-limiter.burstCapacity: ${burstCapacity}
          - id: employee
            uri: lb://employee
            predicates:
              - Path= /employee/search-by-employee-id/**
              - Path= /employee/search-by-employee-email/**
              - Path= /employee/search-employee/**
              - Path= /employee/search-employee-not-criteria-API/**
            filters:
              - name: RequestRateLimiter
                arg:
                  redis-rate-limiter.requestedTokens: ${requestedTokens}
                  redis-rate-limiter.replenishRate: ${replenishRate}
                  redis-rate-limiter.burstCapacity: ${burstCapacity}
          - id: employee
            uri: lb://employee
            predicates:
              - Path= /employee/search-by-employee-email/**
              - RemoteAddr= 127.0.0.1/24
            filters:
              - name: RequestRateLimiter
                arg:
                  redis-rate-limiter.requestedTokens: ${requestedTokens}
                  redis-rate-limiter.replenishRate: ${replenishRate}
                  redis-rate-limiter.burstCapacity: ${burstCapacity}
    main:
      web-application-type:
        reactive

server:
  port:
    8086
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
###RequestLimited
replenishRate: 10
burstCapacity: 20
requestedTokens: 3

